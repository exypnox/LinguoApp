{
  "version": 3,
  "sources": ["../../thirdweb/src/utils/extensions/convert-erc20-amount.ts"],
  "sourcesContent": ["import type { Chain } from \"../../chains/types.js\";\nimport type { ThirdwebClient } from \"../../client/client.js\";\nimport { isNativeTokenAddress } from \"../../constants/addresses.js\";\nimport { getContract } from \"../../contract/contract.js\";\nimport type { Prettify } from \"../type-utils.js\";\nimport { toUnits } from \"../units.js\";\n\ntype AmountOrAmountInWei =\n  | {\n      amount: string | number;\n    }\n  | {\n      amountInWei: bigint;\n    };\n\nexport async function convertErc20Amount(\n  options: Prettify<\n    {\n      client: ThirdwebClient;\n      chain: Chain;\n      erc20Address: string;\n    } & AmountOrAmountInWei\n  >,\n): Promise<bigint> {\n  try {\n    if (\"amount\" in options) {\n      // for native token, we know decimals are 18\n      if (!options.erc20Address || isNativeTokenAddress(options.erc20Address)) {\n        return toUnits(options.amount.toString(), 18);\n      }\n      // otherwise get the decimals of the currency\n      const currencyContract = getContract({\n        client: options.client,\n        chain: options.chain,\n        address: options.erc20Address,\n      });\n      const { decimals } = await import(\n        \"../../extensions/erc20/read/decimals.js\"\n      );\n      const currencyDecimals = await decimals({\n        contract: currencyContract,\n      });\n      return toUnits(options.amount.toString(), currencyDecimals);\n    }\n    return options.amountInWei;\n  } catch (e) {\n    throw new Error(\n      `Failed to convert ERC20 amount for token: ${options.erc20Address}: ${e}`,\n    );\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAeA,eAAsB,mBACpB,SAMC;AAED,MAAI;AACF,QAAI,YAAY,SAAS;AAEvB,UAAI,CAAC,QAAQ,gBAAgB,qBAAqB,QAAQ,YAAY,GAAG;AACvE,eAAO,QAAQ,QAAQ,OAAO,SAAQ,GAAI,EAAE;MAC9C;AAEA,YAAM,mBAAmB,YAAY;QACnC,QAAQ,QAAQ;QAChB,OAAO,QAAQ;QACf,SAAS,QAAQ;OAClB;AACD,YAAM,EAAE,SAAQ,IAAK,MAAM,OACzB,wBAAyC;AAE3C,YAAM,mBAAmB,MAAM,SAAS;QACtC,UAAU;OACX;AACD,aAAO,QAAQ,QAAQ,OAAO,SAAQ,GAAI,gBAAgB;IAC5D;AACA,WAAO,QAAQ;EACjB,SAAS,GAAG;AACV,UAAM,IAAI,MACR,6CAA6C,QAAQ,YAAY,KAAK,CAAC,EAAE;EAE7E;AACF;",
  "names": []
}
