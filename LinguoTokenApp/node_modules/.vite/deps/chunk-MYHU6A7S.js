import {
  isNativeTokenAddress
} from "./chunk-YCZ3YGMG.js";
import {
  getContract
} from "./chunk-V4R6W4TB.js";
import {
  toUnits
} from "./chunk-HAADYJEF.js";

// node_modules/thirdweb/dist/esm/utils/extensions/convert-erc20-amount.js
async function convertErc20Amount(options) {
  try {
    if ("amount" in options) {
      if (!options.erc20Address || isNativeTokenAddress(options.erc20Address)) {
        return toUnits(options.amount.toString(), 18);
      }
      const currencyContract = getContract({
        client: options.client,
        chain: options.chain,
        address: options.erc20Address
      });
      const { decimals } = await import("./decimals-VRBK5JZJ.js");
      const currencyDecimals = await decimals({
        contract: currencyContract
      });
      return toUnits(options.amount.toString(), currencyDecimals);
    }
    return options.amountInWei;
  } catch (e) {
    throw new Error(`Failed to convert ERC20 amount for token: ${options.erc20Address}: ${e}`);
  }
}

export {
  convertErc20Amount
};
//# sourceMappingURL=chunk-MYHU6A7S.js.map
